<?php

/**
 * BaseSalesman
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property string $telephone
 * @property integer $user_id
 * @property integer $address_id
 * @property Doctrine_Collection $Customers
 * @property User $User
 * @property Address $Address
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5441 2009-01-30 22:58:43Z jwage $
 */
abstract class BaseSalesman extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('salesman');
        $this->hasColumn('id', 'integer', 4, array('primary' => true, 'autoincrement' => true, 'type' => 'integer', 'length' => '4'));
        $this->hasColumn('first_name', 'string', 30, array('type' => 'string', 'length' => '30'));
        $this->hasColumn('last_name', 'string', 30, array('type' => 'string', 'length' => '30'));
        $this->hasColumn('email', 'string', 50, array('type' => 'string', 'length' => '50'));
        $this->hasColumn('telephone', 'string', 100, array('type' => 'string', 'length' => '100'));
        $this->hasColumn('user_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
        $this->hasColumn('address_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    }

    public function setUp()
    {
        $this->hasMany('Customer as Customers', array('local' => 'id',
                                                      'foreign' => 'salesman_id'));

        $this->hasOne('User', array('local' => 'user_id',
                                    'foreign' => 'id'));

        $this->hasOne('Address', array('local' => 'address_id',
                                       'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array('created' => array('type' => 'timestamp'), 'updated' => array('type' => 'timestamp')));
        $this->actAs($timestampable0);
    }
}